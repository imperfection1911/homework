# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"},
                ]
  },

:inetRouter2 => {
	:box_name => "centos/7",	
	:net => [
		   {ip: '192.168.255.3', adapter:2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"},
		]

 },

  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
		   {ip: '192.168.100.1', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "central_1"},
		   {ip: '192.168.110.1', adapter: 7, netmask: "255.255.255.252", virtualbox__intnet: "central_2"},
                ]
  },
  
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },

  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

    config.vm.provider "virtualbox" do |v|
        v.memory = 256
     end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
	  setenforce 0
          yum -y install libselinux-python
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          #box.vm.provision "shell", run: "always", inline: <<-SHELL
            #sysctl net.ipv4.conf.all.forwarding=1
	    #ip route add 192.168.0.0/16 via 192.168.255.2
	    #iptables-restore < /vagrant/iptables.rules
	    #/etc/init.d/iptables save
	    #iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
	    #sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
	    #service sshd restart
            #SHELL
	  box.vm.provision :ansible do |ansible|
	    ansible.limit = "all"
	    ansible.playbook = "ansible/inetRouter.yml"
	  end
	when "inetRouter2"
	  box.vm.network 'forwarded_port', guest: 8080, host: 8080, host_ip: '127.0.0.1'
	  #box.vm.provision "shell", run: "always", inline: <<-SHELL
	    #sysctl net.ipv4.conf.all.forwarding=1
	    #systemctl stop firewalld
	    #ip route add 192.168.0.0/16 via 192.168.255.2
	    #iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
	    #yum -y install nmap
	    #iptables -A FORWARD -d 192.168.0.2/32 -i eth0 -o eth1 -p tcp -m tcp --dport 80 -j ACCEPT
	    #iptables -t nat -A PREROUTING  -d 10.0.2.15/32 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.168.0.2:80
	    #iptables -t nat -A OUTPUT -d 10.0.2.15/32 -p tcp -m tcp --dport 80 -j DNAT --to-destination 192.168.0.2
	    #iptables -t nat -A POSTROUTING -d 192.168.0.2/32 -p tcp -m tcp --dport 80 -j SNAT --to-source 192.168.255.3
	    #SHELL
	  box.vm.provision :ansible do |ansible|
	    ansible.limit = "all"
	    ansible.playbook = "ansible/inetRouter2.yml"
	  end

        when "centralRouter"
          #box.vm.provision "shell", run: "always", inline: <<-SHELL
            #echo net.ipv4.conf.all.forwarding=1 >> /etc/sysctl.conf
	    #echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf
	    #sysctl -p /etc/sysctl.conf
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            #echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #systemctl restart network
            #ip route add 192.168.2.0/24 via 192.168.100.2
	    #ip route add 192.168.1.0/24 via 192.168.110.2
	    #chmod 755 /vagrant/knock.sh
	    #yum -y install nmap
	    #systemctl stop firewalld
            #SHELL
	  box.vm.provision :ansible do |ansible|
	    ansible.limit = "all"
	    ansible.playbook = "ansible/centralRouter.yml"
	  end

        when "centralServer"
          #box.vm.provision "shell", run: "always", inline: <<-SHELL
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            #echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #systemctl restart network
	    #yum -y install epel-release
	    #yum -y install nginx
	    #systemctl start nginx
	    #systemctl stop firewalld
            #SHELL
	  box.vm.provision :ansible do |ansible|
	    ansible.limit = "all"
	    ansible.playbook = "ansible/centralServer.yml"
	  end

        end
	

      end

  end
  
  
end
